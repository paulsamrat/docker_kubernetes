#Config Map Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-dis-app
data:
  run.sh: |
    #!/bin/sh
    SET_INDEX=${HOSTNAME##*-}
    cp /mnt/scripts/container_startup.sh /mnt/data/container_startup.sh
    echo "Starting initializing for pod $SET_INDEX"
    if [ "$SET_INDEX" = "0" ]; then
      cp /mnt/scripts/set-0.conf /mnt/data/set.conf
    elif [ "$SET_INDEX" = "1" ]; then
      cp /mnt/scripts/set-1.conf /mnt/data/set.conf
    elif [ "$SET_INDEX" = "2" ]; then
      cp /mnt/scripts/set-2.conf /mnt/data/set.conf
    else
      echo "Invalid statefulset index"
      exit 1
    fi
  set-0.conf: |
    worker.node.name=k8s_worker01
    worker.node.restartCount=0
    dis.service.name=dis01
    worker.node.http.port=31100
    worker.node.https.port=31101
  set-1.conf: |
    worker.node.name=k8s_worker02
    worker.node.restartCount=0
    dis.service.name=dis02
    worker.node.http.port=31200
    worker.node.https.port=31201
  set-2.conf: |
    worker.node.name=k8s_worker03
    worker.node.restartCount=0
    dis.service.name=dis03
    worker.node.http.port=31300
    worker.node.https.port=31301
  container_startup.sh: |
    #!/bin/sh
    set -x
    #source /root/grid.configuration.properties
    #eval $(cat /root/grid.configuration.properties)
    #echo $master1.domain.ip
    #eval $(grep "^master1.domain.ip=" /root/grid.configuration.properties)
    #file="/root/grid.configuration.properties"
    #while IFS= read -r line
    #do        # display $line or do somthing with $line        #echo "$line"
    #done <"$file"
    master_domain_ip=$(grep master.domain.ip $"/mnt/grid-data/grid.configuration.properties" | awk -F= '{print $2}')
    master_domain_port=$(grep master.domain.port $"/mnt/grid-data/grid.configuration.properties" | awk -F= '{print $2}')
    master_domain_ac_username=$(grep master.domain.ac.username $"/mnt/grid-secret/grid.secret.properties" | awk -F= '{print $2}')
    master_domain_ac_password=$(grep master.domain.ac.password $"/mnt/grid-secret/grid.secret.properties" | awk -F= '{print $2}')
    worker_node_name=$(grep worker.node.name $"/etc/app/conf/set.conf" | awk -F= '{print $2}')
    dis_service_name=$(grep dis.service.name $"/etc/app/conf/set.conf" | awk -F= '{print $2}')
    worker_node_restart_count=worker_node_name=$(grep worker.node.restartCount $"/etc/app/conf/set.conf" | awk -F= '{print $2}')
    domain_name=domain_inmasterdmn01.informatica.com_1040_284
    worker_node_http_port=$(grep worker.node.http.port $"/etc/app/conf/set.conf" | awk -F= '{print $2}')
    worker_node_https_port=$(grep worker.node.https.port $"/etc/app/conf/set.conf" | awk -F= '{print $2}')
    SET_INDEX=${HOSTNAME##*-}
    echo $SET_INDEX
    echo $master_domain_ip
    echo $master_domain_port
    echo $master_domain_ac_username
    echo $master_domain_ac_password
    echo $worker_node_name
    dis_service_name=dis01

    (cd /usr/local/isp/bin && ./infasetup.sh defineWorkerNode -dn $domain_name -nn $worker_node_name -na 10.75.149.36:$worker_node_http_port -dg $master_domain_ip:$master_domain_port -un $master_domain_ac_username -pd $master_domain_ac_password -rf nodeoptions.xml)

    (cd /usr/local/isp/bin && ./infacmd.sh updategatewayinfo -dn $domain_name -dg $master_domain_ip:$master_domain_port)
    
    if [ "$SET_INDEX" = "0" ]; then    
    (cd /usr/local/isp/bin && ./infacmd.sh createGrid -dn $domain_name -un $master_domain_ac_username -pd $master_domain_ac_password -gn k8s_grid -nl $worker_node_name)
    elif [ "$SET_INDEX" = "1" ]; then
     (cd /usr/local/isp/bin && ./infacmd.sh updateGrid -dn $domain_name -un $master_domain_ac_username -pd $master_domain_ac_password -gn k8s_grid -nl k8s_worker01 $worker_node_name)
     elif [ "$SET_INDEX" = "2" ]; then
     (cd /usr/local/isp/bin && ./infacmd.sh updateGrid -dn $domain_name -un $master_domain_ac_username -pd $master_domain_ac_password -gn k8s_grid -nl k8s_worker01 k8s_worker02 $worker_node_name)
    fi

    #TODO: if else logic based on restart count - create service should not be called only first time a node is provisioned
    #(cd /usr/local/isp/bin && ./infacmd.sh dis createService -dn Domain -nn $worker_node_name -un $master_domain_ac_username  -pd $master_domain_ac_password  -HttpPort 8888 -sn $dis_service_name -rs mrs -rsun $master_domain_ac_username -rspd $master_domain_ac_password -rssdn "" -httpProtocolType http)

    (cd /usr/local/tomcat/bin && ./infaservice.sh startup)

    #(cd /usr/local/isp/bin && ./infacmd.sh removeService -dn Domain -un Administrator -pd Administrator -sn dis01)     
